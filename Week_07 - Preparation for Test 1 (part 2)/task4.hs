-- –î–∞ —Å–µ –¥–µ—Ñ–∏–Ω–∏—Ä–∞ —Ñ—É–Ω–∫—Ü–∏—è
-- findSmallest :: (Num a, Ord a) => [a] -> [a],
-- –∫–æ—è—Ç–æ –∑–∞–º–µ—Å—Ç–≤–∞ –≤—Å–µ–∫–∏ –µ–ª–µ–º–µ–Ω—Ç –æ—Ç —Å–ø–∏—Å—ä–∫ —Å –ø—Ä–µ–¥–∏—à–Ω–∏—è
-- –º—É –ø–æ-–º–∞–ª—ä–∫ –µ–ª–µ–º–µ–Ω—Ç.
-- –ü—Ä–µ–¥–∏—à–Ω–∏—è—Ç –ø–æ-–º–∞–ª—ä–∫ –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ —á–∏—Å–ª–æ
-- ùë• –æ—Ç –¥–∞–¥–µ–Ω —Å–ø–∏—Å—ä–∫ –µ –ø–æ—Å–ª–µ–¥–Ω–æ—Ç–æ —á–∏—Å–ª–æ –æ—Ç
-- —Å–ø–∏—Å—ä–∫–∞, –∫–æ–µ—Ç–æ —Å–µ –Ω–∞–º–∏—Ä–∞ –≤–ª—è–≤–æ –æ—Ç ùë• –∏
-- –µ –ø–æ-–º–∞–ª–∫–æ –æ—Ç ùë•. –ê–∫–æ —Ç–∞–∫–æ–≤–∞ —á–∏—Å–ª–æ –Ω–µ
-- —Å—ä—â–µ—Å—Ç–≤—É–≤–∞, ùë• –¥–∞ —Å–µ –∑–∞–º–µ—Å—Ç–∏ —Å -1.

main :: IO()
main = do
    print $ findSmallest [2, 5, 3, 7, 8, 1, 9] == [-1, 2, 2, 3, 7, -1, 1]
    print $ findSmallest [5, 7, 4, 9, 8, 10] == [-1, 5, -1, 4, 4, 8]
    print $ findSmallest [1, 5, 2, 2, 2, 5, 5, 4] == [-1, 1, 1, 1, 1, 2, 2, 2]


